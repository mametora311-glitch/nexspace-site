// products/aiec-light/buy.js(() => {  'use strict';  // ページ側 <script> で用意してある設定を取り込む  const cfg = Object.assign({    API_BASE: 'https://aiec-api-1.onrender.com/billing/webhook',   // AIEC-API    STRIPE_PUBLISHABLE_KEY: 'pk_live_51RzC5ODObxTEUuKDs77DdvjuD5paQlsgAvX1yaYop8Kvp4mbkzUYSlJJrDBQHvOpOL2RWv3kIXXkPKXDat5Umh0q009DUTenRP',          // pk_...    PRICE_ID: null                       // 必要なら 'price_xxx'  }, window.AIEC_CONFIG || {});  const log = (...a) => console.log('[AIEC]', ...a);  // ★ 購入ボタンクリック時の処理（ここに fetch を置く）  async function onBuyClick(e) {    e.preventDefault();    const btn = e.currentTarget;    btn.disabled = true;    try {      // ←←← ここが質問の fetch の置き場所です      // --- サーバで Checkout Session を作成 ---      const body = cfg.PRICE_ID ? { price_id: cfg.PRICE_ID } : {};   // 価格ID未設定でも常にJSON      const resp = await fetch(`${cfg.API_BASE}/checkout/create`, {        method: 'POST',        headers: { 'Content-Type': 'application/json' },        body: JSON.stringify(body),      });      // デバッグ出力（今だけ）      const raw = await resp.text();      console.log('[AIEC] POST /checkout/create', resp.status, raw);      if (!resp.ok) {        alert('セッション作成に失敗しました。設定（API_BASE/キー/price）を確認してください。');        btn.disabled = false;        return;    }      const json = JSON.parse(raw);      if (!json.id) {        alert('セッションIDの取得に失敗しました。');        btn.disabled = false;       return;    }      if (!window.Stripe) {        alert('Stripe.js が読み込まれていません。');        return;      }      const stripe = window.Stripe(cfg.STRIPE_PUBLISHABLE_KEY);      const { error } = await stripe.redirectToCheckout({ sessionId: json.id });      if (error) {        alert('決済ページへの遷移でエラーが発生しました。');        log('redirect error', error);      }    } catch (err) {      alert('想定外のエラーが発生しました。コンソールを確認してください。');      log('unexpected', err);    } finally {      btn.disabled = false;    }  }  // ボタン（#buyButton or [data-buy]）にハンドラを1回だけバインド  function bind() {    const target = document.getElementById('buyButton') || document.querySelector('[data-buy]');    if (!target) { log('buy button not found'); return; }    const btn = target.cloneNode(true);      // 二重バインド防止    target.replaceWith(btn);    btn.addEventListener('click', onBuyClick, { passive: false });    log('buy button bound');  }  if (document.readyState === 'loading') {    document.addEventListener('DOMContentLoaded', bind, { once: true });  } else {    bind();  }})();